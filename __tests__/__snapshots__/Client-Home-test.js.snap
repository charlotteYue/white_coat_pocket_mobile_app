// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#1565C0",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    >
      White Coat Pocket Guide
    </Text>
  </View>
  <RCTScrollView
    style={
      Object {
        "marginBottom": 60,
      }
    }
  >
    <View>
      <RCTScrollView>
        <View>
          <View
            style={
              Object {
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#E3F2FD",
                  "fontSize": 15,
                  "marginBottom": "10%",
                  "textAlign": "center",
                }
              }
            >
              The White Coat Pocket Guide aims to inform providers about the essentials of navigating community resources and social services.
            </Text>
          </View>
          <View
            style={
              Object {
                "margin": 10,
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                What resources are you looking for today?
              </Text>
              <Text
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "fontStyle": "italic",
                    "textAlign": "center",
                  }
                }
              >
                (Select One)
              </Text>
            </View>
          </View>
          <RCTSafeAreaView
            emulateUnlessSupported={true}
          >
            <RCTScrollView
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              style={
                Array [
                  Object {
                    "paddingTop": 10,
                  },
                  Object {
                    "flex": 1,
                  },
                ]
              }
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View />
            </RCTScrollView>
          </RCTSafeAreaView>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "height": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#fff",
          }
        }
      >
        Admin portal
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#fff",
            }
          }
        >
          Contact us
        </Text>
      </View>
      <Text>
         | 
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#fff",
            }
          }
        >
          Feedback
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
